//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DAguilarPruebaTPEntities : DbContext
    {
        public DAguilarPruebaTPEntities()
            : base("name=DAguilarPruebaTPEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Empleado> Empleadoes { get; set; }
    
        public virtual int EmpleadoAdd(string rFC, Nullable<int> numEmpleado, string nombre, Nullable<System.DateTime> fechaControl, Nullable<decimal> salario)
        {
            var rFCParameter = rFC != null ?
                new ObjectParameter("RFC", rFC) :
                new ObjectParameter("RFC", typeof(string));
    
            var numEmpleadoParameter = numEmpleado.HasValue ?
                new ObjectParameter("NumEmpleado", numEmpleado) :
                new ObjectParameter("NumEmpleado", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var fechaControlParameter = fechaControl.HasValue ?
                new ObjectParameter("FechaControl", fechaControl) :
                new ObjectParameter("FechaControl", typeof(System.DateTime));
    
            var salarioParameter = salario.HasValue ?
                new ObjectParameter("Salario", salario) :
                new ObjectParameter("Salario", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EmpleadoAdd", rFCParameter, numEmpleadoParameter, nombreParameter, fechaControlParameter, salarioParameter);
        }
    
        public virtual int EmpleadoDelete(string rFC)
        {
            var rFCParameter = rFC != null ?
                new ObjectParameter("RFC", rFC) :
                new ObjectParameter("RFC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EmpleadoDelete", rFCParameter);
        }
    
        public virtual ObjectResult<EmpleadoGetAll_Result> EmpleadoGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EmpleadoGetAll_Result>("EmpleadoGetAll");
        }
    
        public virtual ObjectResult<EmpleadoGetById_Result> EmpleadoGetById(string rFC)
        {
            var rFCParameter = rFC != null ?
                new ObjectParameter("RFC", rFC) :
                new ObjectParameter("RFC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EmpleadoGetById_Result>("EmpleadoGetById", rFCParameter);
        }
    
        public virtual int EmpleadoUpdate(string rFC, Nullable<int> numEmpleado, string nombre, Nullable<System.DateTime> fechaControl, Nullable<decimal> salario)
        {
            var rFCParameter = rFC != null ?
                new ObjectParameter("RFC", rFC) :
                new ObjectParameter("RFC", typeof(string));
    
            var numEmpleadoParameter = numEmpleado.HasValue ?
                new ObjectParameter("NumEmpleado", numEmpleado) :
                new ObjectParameter("NumEmpleado", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var fechaControlParameter = fechaControl.HasValue ?
                new ObjectParameter("FechaControl", fechaControl) :
                new ObjectParameter("FechaControl", typeof(System.DateTime));
    
            var salarioParameter = salario.HasValue ?
                new ObjectParameter("Salario", salario) :
                new ObjectParameter("Salario", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EmpleadoUpdate", rFCParameter, numEmpleadoParameter, nombreParameter, fechaControlParameter, salarioParameter);
        }
    }
}
